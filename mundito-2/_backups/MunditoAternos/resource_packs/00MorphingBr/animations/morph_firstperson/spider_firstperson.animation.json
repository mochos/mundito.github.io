{
	"format_version" : "1.8.0",
	"animations": {
		"animation.morph.spider.first_person.attack_rotation": {
			"loop": true,
			"bones": {
				"leg2": {
					"position": [ "math.clamp(-15.5 * math.sin(variable.first_person_rotation_factor * variable.attack_time * 112.0), -7.0, 999.0) * math.sin(variable.first_person_rotation_factor * variable.attack_time * 112.0)", "math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 200.0) * 7.5 - variable.first_person_rotation_factor * variable.attack_time * 15.0 + variable.short_arm_offset_right", "math.sin(variable.first_person_rotation_factor * variable.attack_time * 120.0) * 1.75" ],
					"rotation": [ "math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 280.0) * -60.0", "-(math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 280.0) * 40.0)", "-(math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 280.0) * 20.0)" ]
				}
			}
		},
		"animation.morph.spider.first_person.empty_hand": {
			"loop": true,
			"bones": {
				"leg2": {
					"position": [ 13.5, 0.0, 12.0 ],
					"rotation": [ "95.0 + variable.is_using_vr * 7.5", "(-45.0 + variable.is_using_vr * 7.5) + 180", "(115.0 + variable.is_using_vr * -2.5) + 180" ]
				},
				"rightitem": {
					"position": [ 0.0, "q.get_default_bone_pivot('rightarm',1) - q.get_default_bone_pivot('rightitem',1) - 7.0", "-q.get_default_bone_pivot('rightitem',2)" ]
				},
				"leftitem": {
					"position": [ 0.0, "q.get_default_bone_pivot('leftarm',1) - q.get_default_bone_pivot('leftitem',1) - 7.0", "-q.get_default_bone_pivot('leftitem',2)" ]
				}
			}
		},
		"animation.morph.legged.first_person.vr_attack_rotation": {
			"loop": true,
			"bones": {
				"leg2": {
					"position": [ "5.0 * math.sin(variable.first_person_rotation_factor * variable.attack_time * 112.0)", "(math.sin(variable.first_person_rotation_factor * (1.0 - variable.attack_time) * (1.0 - variable.attack_time) * 200.0) - 0.8) * 8.75 + 5.0", "math.sin(variable.first_person_rotation_factor * variable.attack_time * 120.0) * 15.0" ],
					"rotation": [ "30.7 * math.sin(variable.first_person_rotation_factor * variable.attack_time * -180.0 - 45.0) * 1.5", 0.0, "-(21.8 * math.sin(variable.first_person_rotation_factor * variable.attack_time * 200.0 + 30.0) * 1.25)" ]
				}
			}
		}
	}
}
